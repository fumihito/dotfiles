# set default settings {{{
set-option -g set-titles on
set-window-option -g automatic-rename off
set-window-option -g aggressive-resize on
set-option -g remain-on-exit off

unbind-key -n C-a
set-option -g prefix C-A
set-option -g prefix2 C-A
bind-key a send-prefix
# }}}

# Set UTF8 configuration {{{
set-window-option -g utf8 on
set-option  -g status-utf8 on

# Screen compatibilities {{{
# lockscreen ^X x
unbind C-X
bind-key C-X lock-server
unbind x
bind-key x lock-server

# screen ^C c
unbind C-C
bind-key C-C new-window
unbind C-c
bind-key C-c new-window

# detach ^D d
unbind C-D
unbind D
bind-key D detach

# displays *
unbind *
bind-key * list-clients

# next ^@ ^N sp n
unbind C-N
bind-key C-N next-window
unbind n
bind-key n next-window

unbind C-P
bind-key C-P previous-window
unbind p
bind-key p previous-window
# }}}

# more quick setings {{{
set-option -s escape-time 1
set-option -g display-time 800
set-option -g repeat-time 1200
# }}}

# }}}
# set history buffer and limits {{{
set-option -g buffer-limit 31
set-option -g history-limit 819200
# }}}

# 256 colors {{{
set-option -g default-terminal screen-256color
# }}}


# Emacs(GNU Screen) like bind {{{
unbind 1
bind-key 1 break-pane \; display-panes
unbind 2
bind-key 2 split-window -v \; display-panes
unbind 3
bind-key 3 split-window -h \; display-panes
unbind C-k
bind-key C-k confirm kill-pane
unbind K
bind-key K confirm kill-pane
bind-key -r C-o   select-pane -t :.+ \; refresh-client
bind-key -r o display-panes \; select-pane -t :.+ \; refresh-client
bind-key -r Space rotate-window
bind-key -r L next-layout
unbind &
bind-key C-a last-window
bind-key A command-prompt -p "New window name:" "rename-window %%"
bind-key S command-prompt -p "New session name:" "rename-session %%"
# }}}

# pane refresh {{{
unbind C-l
bind-key -r C-l refresh-client \; display "Terminal Refresh!"
# }}}

# pane contorl {{{
bind-key -r < resize-pane -L
bind-key -r - resize-pane -D
bind-key -r + resize-pane -U
bind-key -r > resize-pane -R
# }}}

# vi(GNU Screen) like keybind for copy and paste mode {{{
set-window-option -g mode-keys vi
# }}}

# active pane indicator {{{
## Monitoring settings
set-option -g monitor-silence 2
set-window-option -g monitor-activity on
set-option -g visual-activity on
set-option -g monitor-content on
set-option -g visual-content on

set-option -g monitor-silence 0
set-option -g monitor-content "#\$"
bind-key m   command-prompt -p 'Monitor keyword(window):' -I '*'  "set-option monitor-content '%%'"
bind-key M   command-prompt -p 'Monitor keyword(global):' -I '*'  "set-option -g monitor-content '%%'"

# Disable mouse functions {{{
set-window-option -g mode-mouse off
set-option -g mouse-select-pane off
set-option -g mouse-resize-pane off
set-option -g mouse-select-window off
# }}}


## bell
set-option -g visual-bell on
set-option -g bell-action any
# }}}

# compatibility setings for some term environemtns {{{
set-option -g terminal-overrides 'xterm*:smcup@:rmcup@'
# }}}

# Copy and paste handlers {{{

## copy mode bindings
bind-key [ copy-mode \; display "(copy mode)"
bind-key Escape copy-mode \; display "(copy mode)"
bind-key -t vi-copy Y copy-line
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-selection
bind-key -t vi-copy d copy-selection
bind-key -t vi-copy C-v rectangle-toggle 
bind-key -t vi-copy r rectangle-toggle 
bind-key -t vi-copy Escape clear-selection
bind-key -t vi-copy C-n cursor-down
bind-key -t vi-copy C-p cursor-up
bind-key -t vi-copy PPage page-up
bind-key -t vi-copy NPage page-down
bind-key -t vi-copy C-g cancel
bind-key -t vi-copy Enter copy-selection

unbind   -t vi-copy C-c 
unbind   -t vi-copy q

# paste operations
bind-ke ] paste-buffer \; display "pasted."
bind-key C-] choose-buffer
# }}}

# scroll handler {{{
unbind M-NPage
unbind M-PPage
bind-key -n M-NPage copy-mode \; send-keys NPage
bind-key -n M-PPage copy-mode \; send-keys PPage
# }}}

# reload config {{{
bind-key R source-file ~/.byobu/.tmux.conf \; display "Configuration Reloaded!"
# }}}

# display/window control {{{1
set-option display-panes-time 1400
bind-key P display-panes
bind-key C-f command-prompt -p "search:" "find-window '%%'"
bind-key W command-prompt -p "swap-window from:,to:" "swap-window -s '%1' -t '%2'"
bind-key j command-prompt -p "join to:"   "join-pane -t '%1'"
bind-key J command-prompt -p "pull from:" "join-pane -s '%1'"
bind-key D break-pane -d \; display "break-pane"
# }}}

# session control{{{
bind-key C-s choose-session \; display "(choose-session)"
bind-key N confirm new-session
# }}}

# Utilities {{{

## load file
bind-key i   command-prompt -p "(load-and-paste) file?" "load-buffer %%" \; paste-buffer
bind-key I   command-prompt -p "(load-buffer) file?" "load-buffer %%"

## SSH and common command sessions
bind-key t   command-prompt -I "ssh " -p "new:"    "new-window -n '(%1)' '%%'"
bind-key T   command-prompt -I "ssh " -p "sub(|):" "split-window -h 'exec %%'"
bind-key C-T command-prompt -I "ssh " -p "sub(-):" "split-window -v 'exec %%'" 

## run-command
bind-key r   command-prompt -p "(run-shell)" "run-shell '%%'" 

# sub window manpange
bind-key C-m command-prompt -p "man:" "split-window -v 'exec man %%'"

## help 
bind-key H split-window -v "man tmux"
#}}}

# status bar and color settings {{{
set-option -g status-interval 29

set-option -g message-bg green
set-option -g message-fg white

set-window-option -g window-status-fg white
set-window-option -g window-status-bg black
set-window-option -g window-status-attr none 

set-window-option -g window-status-bell-bg white
set-window-option -g window-status-bell-fg blue

set-window-option -g window-status-content-bg yellow
set-window-option -g window-status-content-fg white

set-window-option -g window-status-current-bg white
set-window-option -g window-status-current-fg red

set-window-option -g window-status-activity-bg green
set-window-option -g window-status-activity-fg black

set-option -g pane-border-fg cyan
set-option -g pane-border-bg black

set-option -g pane-active-border-fg white
set-option -g pane-active-border-bg magenta

set-option -g status-left-length 48
set-option -g status-right-length 50

set-option -g status-bg $MYHOSTCOLOR
set-option -g status-fg white

STATUS_LEFT_SIMPLE="#[fg=black,bg=$MYHOSTCOLOR] #h #[fg=brightcyan,bg=black][#S:#I:#P]#[default]"
STATUS_LEFT_DETAIL="#[fg=green,bg=black] #(lsb_release -c --short) #[fg=black,bg=$MYHOSTCOLOR] #h #[default]#[fg=black,bg=yellow]<#(echo $SSH_CONNECTION | cut -d ' '  -f1)#[fg=brightcyan,bg=black][#S:#I:#P]#[fg=blue,bg=yellow] #[default]"
STATUS_RIGHT_SIMPLE="#[default]#[fg=black,bg=white] %h %d(%a)|%H:%M#[default]"
STATUS_RIGHT_DETAIL="#[fg=white,bg=red]?#(cat /var/lib/update-notifier/updates-available | cut -s -d ' ' -f1 | paste -d ' ' -s)!#[fg=yellow,bg=blue]#(cut -d ' ' -f 1-3 /proc/loadavg)#[default]#[fg=black,bg=white] %h %d(%a) %Y|%H:%M#[default]"

set-option -g status-left  $STATUS_LEFT_DETAIL
set-option -g status-right $STATUS_RIGHT_DETAIL
unbind l
bind-key l refresh-client \; source ~/.tmux.conf.status1

# multi pane sync input(Escape-e/E) {{{
set-option -g synchronize-panes off
bind-key e set-window-option synchronize-panes on \; set-option -g status-bg red \; display 'synchronize begin'
bind-key E set-window-option synchronize-panes off \; set-option -g status-bg $MYHOSTCOLOR \; display 'synchronize end' 
# }}}

# }}}

# Ready for recursive environment {{{
unbind C-q
bind-key C-q unbind-key -n C-a \; set-option prefix C-a \; set-option prefix2 C-A \; bind-key a send-prefix \; set-option status-bg $MYHOSTCOLOR \; display "prefix are recovered. use C-a."

unbind Q
bind-key Q   unbind-key -n C-q \; set-option prefix C-q \; set-option prefix2 C-Q \; bind-key q send-prefix \; set-option status-bg black \; display "prefix are changed. use C-q.(If you want to recover,type C-q C-q)."
#}}}

# vim syntax sugars{{{1
# vim:set ft=tmux ts=2 sw=2 sts=2 foldmethod=marker:
# }}}

