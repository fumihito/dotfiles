set-option -s escape-time 0
set-option -g set-titles
set-window-option -g automatic-rename on
set-window-option -g aggressive-resize on
set-window-option -g monitor-activity on

unbind-key -n C-a
set-option -g prefix C-A
set-option -g prefix2 C-A
bind-key a send-prefix

# Bind appropriate commands similar to screen.
# lockscreen ^X x
unbind C-X
bind-key C-X lock-server
unbind x
bind-key x lock-server

# screen ^C c
unbind C-C
bind-key C-C new-window
unbind C-c
bind-key C-c new-window

# detach ^D d
unbind C-D
bind-key C-D detach

# displays *
unbind *
bind-key * list-clients

# next ^@ ^N sp n
unbind C-N
bind-key C-N next-window
unbind n
bind-key n next-window

unbind C-P
bind-key C-P previous-window
unbind p
bind-key p previous-window

# more quick setings {{{
set-option -s escape-time 1
set-option -g display-time 800
set-option -g repeat-time 1200
# }}}

# Set UTF8 configuration {{{
set-window-option -g utf8 on
set-option  -g status-utf8 on
# }}}

# set history buffer and limits {{{
set-option -g buffer-limit 31
set-option -g history-limit 819200
# }}}

# 256 colors {{{
#set-option -g default-terminal screen-256color
# }}}

# Emacs(GNU Screen) like bind {{{
set-option -g pane-active-border-fg white
unbind 1
bind-key 1 break-pane
bind-key 2 split-window -v
bind-key 3 split-window -h
bind-key C-k confirm kill-pane
bind-key K confirm kill-pane
bind-key -r o   select-pane -t :.+ \; refresh-client
bind-key -r C-o display-panes \; select-pane -t :.+ \; refresh-client
bind-key -r O   rotate-window
unbind &
# }}}


# vi like pane contorl {{{
bind-key -r < resize-pane -L
bind-key -r - resize-pane -D
bind-key -r + resize-pane -U
bind-key -r > resize-pane -R
# }}}

# - and | ane control {{{
# unbind %
bind-key | split-window -h
## <too hot>
# bind – split-window -v
## </too hot>
# }}}

# vi(GNU Screen) like keybind for copy and paste mode {{{
set-window-option -g mode-keys vi
bind-key C-a last-window
# }}}

# multi pane sync input(Escape-e/E) {{{
set-option -g synchronize-panes off
bind-key e setw synchronize-panes on
bind-key E setw synchronize-panes off
# }}}

# active pane indicator {{{
set-window-option -g monitor-activity on 
set-option -g visual-activity on
set-option -g visual-bell on
set-option -g bell-action any
set-option -g monitor-content on
set-option -g visual-content on
set-option -g remain-on-exit off

# }}}

# compatibility setings for some term environemtns {{{
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
# }}}

# Copy and paste handlers {{{
## <too hot>
# bind-key -t vi-copy dd copy-line
## </too hot>
bind-key [ copy-mode \; display "(copy mode)"
bind-key Escape copy-mode \; display "(copy mode)"
bind-key -t vi-copy Y copy-line
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-selection
bind-key -t vi-copy d copy-selection
bind-key -t vi-copy C-v rectangle-toggle 
bind-key -t vi-copy r rectangle-toggle 
bind-key -t vi-copy Escape cancel
bind-key -t vi-copy C-n cursor-down
bind-key -t vi-copy C-p cursor-up

bind-key ] paste-buffer \; display "pasted."
bind-key C-] choose-buffer
# }}}

# reload config {{{
bind-key R source-file ~/.byobu/.tmux.conf \; display "Configuration Reloaded!"
# }}}

# display/window control {{{1
set display-panes-time 1400
bind-key P display-panes
bind-key C-f command-prompt -p "search:" "find-window '%%'"

# Window control binding {{{2
bind-key 0 command-prompt -p "swap-window from:,to:" "swap-window -s '%1' -t '%2'"
# }}}

# }}}

# session control{{{
bind-key s choose-session \; display "(choose-session)"
bind-key S confirm new-session
# }}}

# Utilities {{[

## load file
bind-key i   command-prompt -p "(load-and-paste) file?" "load-buffer %%" \; paste-buffer
bind-key I   command-prompt -p "(load-buffer) file?" "load-buffer %%"

## SSH and common command sessions
bind-key t   command-prompt -I "ssh " -p "new:"    "new-window -n '(%1)' '%%'"
bind-key T   command-prompt -I "ssh " -p "sub(h):" "split-window -h 'exec %%'"
bind-key C-T command-prompt -I "ssh " -p "sub(v):" "split-window -v 'exec %%'"

# sub window manpange
bind-key C-m command-prompt -p "man:" "split-window -v 'exec man %%'"

## help 
bind H split-window -v "man tmux"
#}}}

#{{{
# status bar
set -g status-interval 29

set -g status-bg magenta
set -g status-fg white
set -g status-left-length 34
set -g status-right-length 40
set-option -s escape-time 0
set-option -g set-titles
set-window-option -g automatic-rename on
set-window-option -g aggressive-resize on
set-window-option -g monitor-activity on

unbind-key -n C-a
set-option -g prefix C-A
set-option -g prefix2 C-A
bind-key a send-prefix

# Bind appropriate commands similar to screen.
# lockscreen ^X x
unbind C-X
bind-key C-X lock-server
unbind x
bind-key x lock-server

# screen ^C c
unbind C-C
bind-key C-C new-window
unbind C-c
bind-key C-c new-window

# detach ^D d
unbind C-D
bind-key C-D detach

# displays *
unbind *
bind-key * list-clients

# next ^@ ^N sp n
unbind C-N
bind-key C-N next-window
unbind n
bind-key n next-window

unbind C-P
bind-key C-P previous-window
unbind p
bind-key p previous-window

# more quick setings {{{
set-option -s escape-time 1
set-option -g display-time 800
set-option -g repeat-time 1200
# }}}

# Set UTF8 configuration {{{
set-window-option -g utf8 on
set-option  -g status-utf8 on
# }}}

# set history buffer and limits {{{
set-option -g buffer-limit 31
set-option -g history-limit 819200
# }}}

# 256 colors {{{
#set-option -g default-terminal screen-256color
# }}}

# Emacs(GNU Screen) like bind {{{
set-option -g pane-active-border-fg white
unbind 1
bind-key 1 break-pane
bind-key 2 split-window -v
bind-key 3 split-window -h
bind-key C-k confirm kill-pane
bind-key K confirm kill-pane
bind-key -r o   select-pane -t :.+ \; refresh-client
bind-key -r C-o display-panes \; select-pane -t :.+ \; refresh-client
bind-key -r O   rotate-window
unbind &
# }}}


# vi like pane contorl {{{
bind-key -r < resize-pane -L
bind-key -r - resize-pane -D
bind-key -r + resize-pane -U
bind-key -r > resize-pane -R
# }}}

# - and | ane control {{{
# unbind %
bind-key | split-window -h
## <too hot>
# bind – split-window -v
## </too hot>
# }}}

# vi(GNU Screen) like keybind for copy and paste mode {{{
set-window-option -g mode-keys vi
bind-key C-a last-window
# }}}

# multi pane sync input(Escape-e/E) {{{
set-option -g synchronize-panes off
bind-key e setw synchronize-panes on
bind-key E setw synchronize-panes off
# }}}

# active pane indicator {{{
set-window-option -g monitor-activity on 
set-option -g visual-activity on
set-option -g visual-bell on
set-option -g bell-action any
set-option -g monitor-content on
set-option -g visual-content on
set-option -g remain-on-exit off

# }}}

# compatibility setings for some term environemtns {{{
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
# }}}

# Copy and paste handlers {{{
## <too hot>
# bind-key -t vi-copy dd copy-line
## </too hot>
bind-key [ copy-mode \; display "(copy mode)"
bind-key Escape copy-mode \; display "(copy mode)"
bind-key -t vi-copy Y copy-line
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-selection
bind-key -t vi-copy d copy-selection
bind-key -t vi-copy C-v rectangle-toggle 
bind-key -t vi-copy r rectangle-toggle 
bind-key -t vi-copy Escape cancel
bind-key -t vi-copy C-n cursor-down
bind-key -t vi-copy C-p cursor-up

bind-key ] paste-buffer \; display "pasted."
bind-key C-] choose-buffer
# }}}

# reload config {{{
bind-key R source-file ~/.byobu/.tmux.conf \; display "Configuration Reloaded!"
# }}}

# display/window control {{{1
set display-panes-time 1400
bind-key P display-panes
bind-key C-f command-prompt -p "search:" "find-window '%%'"

# Window control binding {{{2
bind-key 0 command-prompt -p "swap-window from:,to:" "swap-window -s '%1' -t '%2'"
# }}}

# }}}

# session control{{{
bind-key s choose-session \; display "(choose-session)"
bind-key S confirm new-session
# }}}

# Utilities {{[

## load file
bind-key i   command-prompt -p "(load-and-paste) file?" "load-buffer %%" \; paste-buffer
bind-key I   command-prompt -p "(load-buffer) file?" "load-buffer %%"

## SSH and common command sessions
bind-key t   command-prompt -I "ssh " -p "new:"    "new-window -n '(%1)' '%%'"
bind-key T   command-prompt -I "ssh " -p "sub(h):" "split-window -h 'exec %%'"
bind-key C-T command-prompt -I "ssh " -p "sub(v):" "split-window -v 'exec %%'"

# sub window manpange
bind-key C-m command-prompt -p "man:" "split-window -v 'exec man %%'"

## help 
bind H split-window -v "man tmux"
#}}}

#{{{
# status bar
set -g status-interval 29

set -g status-bg magenta
set -g status-fg white
set -g status-left-length 30
set -g status-right-length 50

STATUS_LEFT_SIMPLE='#[fg=brightgreen,bg=black] #h #[fg=brightcyan,bg=black][#S:#I:#P]#[default]'
STATUS_LEFT_DETAIL='#[fg=black,bg=white] #(lsb_release -c --short) #[fg=brightgreen,bg=black] #h #[fg=black,bg=yellow]<=#(echo $SSH_CONNECTION | cut -d " " -f1)#[fg=brightcyan,bg=black][#S:#I:#P]#[fg=blue,bg=yellow] #[default]'
STATUS_RIGHT_SIMPLE='#[default]#[fg=black,bg=white] %h %m(%a)|%H:%M#[default]'
STATUS_RIGHT_DETAIL='#[fg=white,bg=red]?#(cat /var/lib/update-notifier/updates-available | cut -s -d " " -f1 | paste -d " " -s)!#[fg=yellow,bg=blue]#(cut -d " " -f 1-3 /proc/loadavg)#[default]#[fg=black,bg=white] %h %m(%a),%Y|%H:%M#[default]'

set -g status-left  $STATUS_LEFT_DETAIL
set -g status-right $STATUS_RIGHT_DETAIL
unbind l
bind-key l refresh-client \; source ~/.tmux.conf.status1

# pane refresh
unbind C-l
bind-key -r C-l refresh-client \; display "Terminal Refresh!"

# colours
set-window-option -g window-status-fg black
set-window-option -g window-status-bg white
set-window-option -g window-status-attr none 
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg cyan
set-window-option -g window-status-current-attr underscore

set-option -g pane-active-border-fg black
set-option -g pane-active-border-bg green
set-option -g pane-active-border-fg green
set-option -g pane-active-border-bg black
#}}}

# vim syntax sugars{{{1
# vim:set ft=tmux ts=2 sw=2 sts=2 foldmethod=marker:
# }}}

